cmake_minimum_required(VERSION 3.9)
project(Game-of-Life-UI)

set(CMAKE_CXX_STANDARD 17)
# Disable building extras we won't need (pure C++ project)
set(NANOGUI_BUILD_EXAMPLE OFF CACHE BOOL " " FORCE)
set(NANOGUI_BUILD_PYTHON  OFF CACHE BOOL " " FORCE)
set(NANOGUI_INSTALL       OFF CACHE BOOL " " FORCE)
set(NANOGUI_USE_GLAD      ON  CACHE BOOL " " FORCE)

find_package(OpenGL REQUIRED)
find_package(GLEW)

include_directories(
#        include
        include/nanogui/include/
#        include/glad
)

#add_subdirectory(include/glfw)
# Add the configurations from nanogui
add_subdirectory(include/nanogui)

# For reliability of parallel build, make the NanoGUI targets dependencies
set_property(TARGET glfw glfw_objects nanogui PROPERTY FOLDER "dependencies")

# Various preprocessor definitions have been generated by NanoGUI
add_definitions(${NANOGUI_EXTRA_DEFS})

# On top of adding the path to nanogui/include, you may need extras
include_directories(${NANOGUI_EXTRA_INCS})

# Compile a target using NanoGUI
add_executable(Game-of-Life-UI
        main.cpp
#        test_PatternLib.cpp
        Game.cpp
        Game.h
        PatternLib.cpp
        PatternLib.h
        Shader.h
        )

# Lastly, additional libraries may have been built for you.  In addition to linking
# against NanoGUI, we need to link against those as well.
target_link_libraries(Game-of-Life-UI GLEW nanogui ${NANOGUI_EXTRA_LIBS})